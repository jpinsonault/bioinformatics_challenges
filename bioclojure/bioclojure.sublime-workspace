{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rsub",
				"reverse_rna_substring"
			],
			[
				"prog",
				"progress_bar"
			],
			[
				"posi",
				"position"
			],
			[
				"prob",
				"progress_bar"
			],
			[
				"probar",
				"progressbar"
			],
			[
				"pick",
				"pickle_file"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"loc",
				"location"
			],
			[
				"lo",
				"location"
			],
			[
				"ma",
				"match"
			],
			[
				"put",
				"put_extra_steps_in_text"
			]
		]
	},
	"buffers":
	[
		{
			"file": "project.clj",
			"settings":
			{
				"buffer_size": 367,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/bioclojure/core.clj",
			"settings":
			{
				"buffer_size": 351,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/bioclojure/p26.clj",
			"settings":
			{
				"buffer_size": 160,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "(ns utils.core\n  (:gen-class))\n\n\n(defn print-usage\n  \"Print usage\"\n  []\n  (println \"Usage: lein run problem_name args...\"))\n",
			"file": "src/bioclojure/utils.clj",
			"file_size": 126,
			"file_write_time": 130425936432444447,
			"settings":
			{
				"buffer_size": 124,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 265.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"org",
				"Set Syntax: orgmode"
			],
			[
				"bahs",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"dis",
				"SublimeLinter: Disable Linter"
			],
			[
				"logcu",
				"Git: Log Current File"
			],
			[
				"log",
				"Git: Log All"
			],
			[
				"difcu",
				"Git: Diff Current File"
			],
			[
				"enabl",
				"SublimeLinter: Enable Linter"
			],
			[
				"disa",
				"SublimeLinter: Disable Linter"
			],
			[
				"diffcu",
				"Git: Diff Current File"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"linter",
				"SublimeLinter: Enable Linter"
			],
			[
				"ena",
				"SublimeLinter: Enable Linting"
			],
			[
				"linti",
				"SublimeLinter: Disable Linting"
			],
			[
				"remo",
				"Package Control: Remove Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 174.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler({\"http\": \"http://proxy-us.intel.com:911\"})) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os",
			"importurllib.request,os",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/jtpinsox/Documents/leintest/project.clj",
		"/C/Users/jtpinsox/Documents/leintest/src/leintest/core.clj",
		"/C/Users/jtpinsox/Documents/leintest/src/leintest/p26.clj",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_100_2.txt",
		"/C/Users/jtpinsox/Documents/workflow_profiler/workflow_parser/ne",
		"/C/Users/jtpinsox/Documents/creature_simulation2.mp4",
		"/C/Users/jtpinsox/Documents/workflow_profiler_0.1/workflow_parser/parse_workflow_stats.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem7.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem6.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/utils.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem_2.5.py",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_99_2.txt",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem_2.2.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem_2.4.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/file",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_98_3.txt",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_98_2.txt",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem8_test.py",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_98_3-1.txt",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/bar_test.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/ch1_salmonella.py",
		"/C/Users/jtpinsox/Downloads/Salmonella_enterica(1).fasta",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem5.py",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_96_6.txt",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem8.py",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_9_6-2.txt",
		"/C/Users/jtpinsox/AppData/Local/Temp/dataset_9_6-1.txt",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/suffix_tree.py",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/Salmonella_enterica.fasta",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/2.2.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/B_brevis.txt",
		"/C/Users/jtpinsox/Documents/workflow_profiler_0.1/workflow_parser/run_tests.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/.gitignore",
		"/C/Users/jtpinsox/Documents/workflow_profiler_0.1/workflow_parser/plot_templates/template_committed_mem.plt",
		"/C/Users/jtpinsox/Downloads/dataset_4_4.txt",
		"/C/Users/jtpinsox/Documents/utils/scpdmz.sh",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 2/Packages/Default/trim_trailing_white_space.py",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 2/Packages/Default/duplicate_line.py",
		"/C/Users/jtpinsox/Documents/neural_networks/creature_simulation/PygameUtils.pyx",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 2/Packages/Default/fold.py",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/User/Select Next Matching Word.py",
		"/C/Users/jtpinsox/Documents/neural_networks/NeuralNetworks/tests/speed_test.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/Python-Suffix-Tree/test_suffix_tree.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem4.py",
		"/C/Users/jtpinsox/Documents/bioinformatics_challenges/problem3.py",
		"/C/Users/jtpinsox/Documents/stepic/problem3.py",
		"/C/Users/jtpinsox/Documents/stepic/problem1.py",
		"/C/Users/jtpinsox/Documents/stepic/utils.py",
		"/C/Users/jtpinsox/Documents/stepic/problem4.py",
		"/C/Users/jtpinsox/Documents/stepic/E-coli.txt",
		"/C/Users/jtpinsox/Documents/stepic/file",
		"/C/Users/jtpinsox/Downloads/dataset_3_5.txt",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/jtpinsox/Documents/stepic/problem2.py",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 2/Packages/Default/duplicate_line.pyc",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/Users/jtpinsox/Documents/workflow_profiler_0.1/workflow_parser/plot_templates/template_active_core_mpstat.plt",
		"/C/Users/jtpinsox/Documents/logging_test.py",
		"/C/Users/jtpinsox/Documents/neural_networks/creature_simulation/GameObjects.py",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/FuzzyFileNav/Default (Windows).sublime-keymap",
		"/C/Users/jtpinsox/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" Fail!",
			"#",
			"# ",
			"data_type",
			"-r",
			"def get_data_from",
			"def get_useful_metrics",
			"def mak",
			"20000",
			"weights",
			"coin",
			"target",
			"coin",
			"weight",
			"len(peptide_string)",
			">",
			"rna_cache",
			",  \"",
			"\n    ",
			"  ",
			"\"\"",
			"word",
			"string",
			"search_string",
			"fuzzy_kmers",
			"position",
			"rna",
			"len_peptide * 3",
			"_rna",
			"codon_table",
			"U",
			" ",
			"peptide",
			",        ",
			"        \"",
			"\"k\"",
			"\"I\"",
			"\"M\"",
			"   ",
			"\" \"",
			" ",
			"progress_bar",
			",",
			">",
			"genome",
			"o_file",
			"/",
			"counts",
			"kmer[0]",
			"single_step_dict",
			"\"\"\"\n",
			"[\\t ]+$",
			"self.set_of_columns",
			"core = set_of",
			"core=set_of",
			"regions",
			"new_regions",
			"[\\t ]+$",
			"self",
			"region",
			"g",
			"search_string",
			"0",
			"[0]",
			"p0",
			"line",
			"csv",
			"fix_time_flag",
			"get_starting_time",
			"filename",
			"self.logger",
			"OUTPUT_DIR_NAME",
			"OUTPUT_DIR",
			"make_csv_from_data",
			"make_output_dir",
			"output",
			"decode_data",
			"target_",
			"remove",
			"rm -",
			"rm -rf",
			"533",
			"pipeline_parse_dict",
			"-n",
			"metric:",
			"print",
			"self.logger",
			"print",
			"check_args",
			"print",
			"file",
			",",
			"print",
			"|",
			"'",
			"action",
			"\",",
			"const",
			")",
			"\")",
			"\"--",
			"help =",
			"\",",
			"warning",
			"column_type",
			"error:",
			":",
			"c",
			"g",
			"t",
			"a",
			"()",
			"setofcolu",
			"InputOutput",
			"columnofstat",
			"all(",
			"time_end",
			"date_holder",
			"get",
			"str (",
			"store_data_into_csv",
			"+ \"",
			"str(",
			"del ",
			"average",
			"raise ex",
			"make_sliding",
			"raise ex"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"\\1",
			"",
			"\\1",
			"\\2"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "project.clj",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 367,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close"
							],
							"syntax": "Packages/Clojure/Clojure.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/bioclojure/core.clj",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 351,
						"regions":
						{
						},
						"selection":
						[
							[
								350,
								350
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close"
							],
							"syntax": "Packages/Clojure/Clojure.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/bioclojure/p26.clj",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 160,
						"regions":
						{
						},
						"selection":
						[
							[
								40,
								40
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close"
							],
							"syntax": "Packages/Clojure/Clojure.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/bioclojure/utils.clj",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 124,
						"regions":
						{
						},
						"selection":
						[
							[
								39,
								50
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close"
							],
							"syntax": "Packages/Clojure/Clojure.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 411.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 142.0
	},
	"project": "",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"util",
				"C:\\Users\\jtpinsox\\Documents\\bioinformatics_challenges\\utils.py"
			],
			[
				"",
				"C:\\Users\\jtpinsox\\Documents\\workflow_profiler_0.1\\workflow_parser\\parse_workflow_stats.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 246.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
